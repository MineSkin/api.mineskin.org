{
  "openapi": "3.0.3",
  "info": {
    "title": "MineSkin API",
    "version": "2.0.0",
    "description": "Client implementations: [Java](https://github.com/InventivetalentDev/MineskinClient) \n[NodeJS](https://github.com/InventivetalentDev/mineskin-client)\n\n [Examples](https://github.com/MineSkin/examples)\n\n ",
    "contact": {
      "name": "API Support",
      "url": "https://discord.gg/DeeNu3cUMp",
      "email": "info@mineskin.org"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/MineSkin/api.mineskin.org/blob/master/LICENSE"
    },
    "termsOfService": "https://legal.inventivetalent.org/terms/mineskin"
  },
  "servers": [
    {
      "url": "https://api.mineskin.org"
    }
  ],
  "tags": [
    {
      "name": "generate"
    },
    {
      "name": "queue"
    },
    {
      "name": "skins"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "description": "API key header - Get your key from [account.mineskin.org](https://account.mineskin.org/keys)",
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "apiKey": {
        "name": "Authorization",
        "description": "API key from [account.mineskin.org](https://account.mineskin.org/keys)",
        "example": "Bearer da84de82e960d6c0510088279878c79365ad5118d350d619f20324a5494f156b",
        "in": "header",
        "schema": {
          "type": "string"
        }
      },
      "userAgent": {
        "name": "User-Agent",
        "description": "Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/) for implementation examples",
        "example": "ExampleApp/v1.0",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "GenerateErrorResponse": {
        "description": "Generator Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                },
                {
                  "properties": {
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "GenerateRateLimitResponse": {
        "description": "Rate Limited",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                },
                {
                  "properties": {
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "GenerateSuccessResponse": {
        "description": "Generator Success",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "skin"
                  ],
                  "properties": {
                    "skin": {
                      "$ref": "#/components/schemas/SkinInfo"
                    },
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    },
                    "usage": {
                      "$ref": "#/components/schemas/UsageInfo"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/SuccessResponseBody"
                }
              ]
            }
          }
        }
      },
      "GenerateUserErrorResponse": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                },
                {
                  "properties": {
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "GenericErrorResponse": {
        "description": "Generic Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                }
              ]
            }
          }
        }
      },
      "GenericResponse": {
        "description": "Generic Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GenericResponseBody"
            }
          }
        }
      },
      "GenericSuccessResponse": {
        "description": "Generator Success",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "skin"
                  ],
                  "properties": {
                    "skin": {
                      "$ref": "#/components/schemas/SkinInfo"
                    },
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/SuccessResponseBody"
                }
              ]
            }
          }
        }
      },
      "NotFoundErrorResponse": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                }
              ]
            }
          }
        }
      },
      "QueueProcessingResponse": {
        "description": "Job Processing",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "job"
                  ],
                  "properties": {
                    "job": {
                      "$ref": "#/components/schemas/JobInfo"
                    },
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    },
                    "usage": {
                      "$ref": "#/components/schemas/UsageInfo"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/SuccessResponseBody"
                }
              ]
            }
          }
        }
      },
      "QueueSuccessResponse": {
        "description": "Job Completed",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "job",
                    "skin"
                  ],
                  "properties": {
                    "job": {
                      "$ref": "#/components/schemas/JobInfo"
                    },
                    "skin": {
                      "$ref": "#/components/schemas/SkinInfo"
                    },
                    "rateLimit": {
                      "$ref": "#/components/schemas/RateLimitInfo"
                    },
                    "usage": {
                      "$ref": "#/components/schemas/UsageInfo"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/SuccessResponseBody"
                }
              ]
            }
          }
        }
      }
    },
    "schemas": {
      "CodeAndMessage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreditsUsageInfo": {
        "type": "object",
        "required": [
          "used",
          "remaining"
        ],
        "properties": {
          "used": {
            "type": "number",
            "description": "Credits used for this request",
            "example": 1
          },
          "remaining": {
            "type": "number",
            "description": "Remaining credits",
            "example": 23
          }
        }
      },
      "DelayInfo": {
        "type": "object",
        "required": [
          "millis"
        ],
        "properties": {
          "millis": {
            "type": "number",
            "description": "Delay between requests (in milliseconds) - depends on the API key used for this request",
            "example": 1200
          },
          "seconds": {
            "type": "number",
            "description": "Delay between requests (in seconds) - depends on the API key used for this request",
            "example": 1.2
          }
        }
      },
      "ErrorResponseBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericResponseBody"
          },
          {
            "type": "object",
            "properties": {
              "success": {
                "example": false
              },
              "errors": {
                "example": [
                  {
                    "code": "generic_error",
                    "message": "Something went wrong"
                  }
                ]
              }
            }
          }
        ]
      },
      "GenerateOptions": {
        "type": "object",
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/SkinVariant"
          },
          "name": {
            "type": "string",
            "maxLength": 20
          },
          "visibility": {
            "$ref": "#/components/schemas/SkinVisibility"
          }
        },
        "example": {
          "variant": "classic",
          "name": "My Example Skin",
          "visibility": "public"
        }
      },
      "GeneratorInfo": {
        "type": "object",
        "required": [
          "version",
          "timestamp",
          "duration",
          "account",
          "server"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          },
          "account": {
            "type": "string"
          },
          "server": {
            "type": "string"
          }
        }
      },
      "GenericResponseBody": {
        "type": "object",
        "required": [
          "success"
        ],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndMessage"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndMessage"
            }
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodeAndMessage"
            }
          },
          "links": {
            "type": "object",
            "description": "Links to related resources",
            "properties": {
              "self": {
                "type": "string"
              }
            }
          }
        }
      },
      "JobInfo": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Job ID"
          },
          "status": {
            "type": "string",
            "description": "Job status\n\n- unknown: The job status is unknown\n- waiting: The job is waiting to be processed\n- active: The job is currently being processed\n- failed: The job has failed. The root 'errors' array may contain more details\n- completed: The job has completed. The 'result' field will contain the job result",
            "enum": [
              "unknown",
              "waiting",
              "active",
              "failed",
              "completed"
            ]
          },
          "result": {
            "type": "string",
            "description": "If the job is finished, this will return the result of the job (e.g. the skin UUID)"
          }
        }
      },
      "LimitInfo": {
        "type": "object",
        "required": [
          "limit",
          "remaining"
        ],
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit of requests in the current window (usually 1 minute). Same as the 'X-RateLimit-Limit' header",
            "example": 60
          },
          "remaining": {
            "type": "number",
            "description": "Remaining requests in the current window. Same as the 'X-RateLimit-Remaining' header",
            "example": 58
          }
        }
      },
      "MeteredUsageInfo": {
        "type": "object",
        "required": [
          "used"
        ],
        "properties": {
          "used": {
            "type": "number",
            "description": "Number of metered units used for this request",
            "example": 1
          }
        }
      },
      "NextRequest": {
        "type": "object",
        "required": [
          "absolute",
          "relative"
        ],
        "properties": {
          "absolute": {
            "type": "number",
            "format": "timestamp",
            "description": "Absolute timestamp (in milliseconds) after which the next request can be made",
            "example": 1726829503123
          },
          "relative": {
            "type": "number",
            "description": "Relative delay (in milliseconds) after which the next request can be made",
            "example": 800
          }
        }
      },
      "PartialSkinInfo": {
        "type": "object",
        "required": [
          "uuid",
          "variant",
          "visibility",
          "views"
        ],
        "properties": {
          "uuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/SkinVisibility"
          },
          "variant": {
            "$ref": "#/components/schemas/SkinVariant"
          },
          "views": {
            "type": "number"
          }
        },
        "example": {
          "uuid": "c891dfac4cd247a2a55743e7e82ce76f",
          "name": "Test Skin",
          "visibility": "public",
          "variant": "classic",
          "views": 1,
          "duplicate": false
        }
      },
      "RateLimitInfo": {
        "type": "object",
        "required": [
          "next",
          "delay"
        ],
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextRequest"
          },
          "delay": {
            "$ref": "#/components/schemas/DelayInfo"
          },
          "limit": {
            "$ref": "#/components/schemas/LimitInfo"
          }
        }
      },
      "SkinHashes": {
        "type": "object",
        "required": [
          "skin"
        ],
        "properties": {
          "skin": {
            "type": "string",
            "description": "Skin Hash"
          },
          "cape": {
            "type": "string",
            "description": "(optional) Cape Hash"
          }
        }
      },
      "SkinInfo": {
        "type": "object",
        "required": [
          "uuid",
          "variant",
          "visibility",
          "texture",
          "generator",
          "views",
          "duplicate"
        ],
        "properties": {
          "uuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "$ref": "#/components/schemas/SkinVisibility"
          },
          "variant": {
            "$ref": "#/components/schemas/SkinVariant"
          },
          "texture": {
            "$ref": "#/components/schemas/SkinTexture"
          },
          "generator": {
            "$ref": "#/components/schemas/GeneratorInfo"
          },
          "views": {
            "type": "number"
          },
          "duplicate": {
            "type": "boolean"
          }
        },
        "example": {
          "uuid": "c891dfac4cd247a2a55743e7e82ce76f",
          "name": "Test Skin",
          "visibility": "public",
          "variant": "classic",
          "views": 1,
          "duplicate": false
        }
      },
      "SkinTexture": {
        "type": "object",
        "required": [
          "data",
          "hash",
          "url"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueAndSignature"
          },
          "hash": {
            "$ref": "#/components/schemas/SkinHashes"
          },
          "url": {
            "$ref": "#/components/schemas/SkinUrls"
          }
        }
      },
      "SkinUrls": {
        "type": "object",
        "required": [
          "skin"
        ],
        "properties": {
          "skin": {
            "type": "string",
            "description": "Skin Texture Url"
          },
          "cape": {
            "type": "string",
            "description": "(optional) Cape Texture Url"
          }
        }
      },
      "SkinVariant": {
        "type": "string",
        "enum": [
          "classic",
          "slim",
          "unknown"
        ],
        "default": "unknown"
      },
      "SkinVisibility": {
        "type": "string",
        "enum": [
          "public",
          "unlisted",
          "private"
        ],
        "default": "public"
      },
      "SuccessResponseBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericResponseBody"
          },
          {
            "type": "object",
            "properties": {
              "success": {
                "example": true
              },
              "errors": {
                "example": []
              },
              "messages": {
                "example": [
                  {
                    "code": "ok",
                    "message": "All good!"
                  }
                ]
              }
            }
          }
        ]
      },
      "UploadGenerateBody": {
        "type": "object",
        "description": "File Upload Generate Request Body",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenerateOptions"
          },
          {
            "required": [
              "file"
            ],
            "properties": {
              "file": {
                "description": "PNG image file to upload. You should use a client library like [MineSkin Java Client](https://github.com/InventivetalentDev/MineskinClient) to properly handle file uploads. See [github/examples](https://github.com/MineSkin/examples)",
                "type": "string",
                "format": "binary",
                "externalDocs": {
                  "description": "Example implementations",
                  "url": "https://github.com/MineSkin/examples"
                }
              }
            }
          }
        ]
      },
      "UrlGenerateBody": {
        "type": "object",
        "description": "URL Generate Request Body",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenerateOptions"
          },
          {
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "example": {
              "url": "https://i.imgur.com/kQPrtYw.png"
            }
          }
        ]
      },
      "UsageInfo": {
        "type": "object",
        "required": [],
        "properties": {
          "credits": {
            "$ref": "#/components/schemas/CreditsUsageInfo"
          },
          "metered": {
            "$ref": "#/components/schemas/MeteredUsageInfo"
          }
        }
      },
      "UserGenerateBody": {
        "type": "object",
        "description": "User Generate Request Body",
        "allOf": [
          {
            "$ref": "#/components/schemas/GenerateOptions"
          },
          {
            "required": [
              "user"
            ],
            "properties": {
              "user": {
                "description": "Player UUID",
                "type": "string",
                "minLength": 32,
                "maxLength": 36
              }
            }
          }
        ]
      },
      "ValueAndSignature": {
        "type": "object",
        "required": [
          "value",
          "signature"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "Skin Value"
          },
          "signature": {
            "type": "string",
            "description": "Skin Signature"
          }
        }
      }
    }
  },
  "paths": {
    "/v2/generate": {
      "post": {
        "summary": "Generate a skin",
        "description": "Note: this endpoint is not recommended. You should use the queue endpoints instead to submit jobs and check on their status periodically.\n\nQueue skin generation and wait for the result.",
        "tags": [
          "generate"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userAgent"
          },
          {
            "$ref": "#/components/parameters/apiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UrlGenerateBody"
                  },
                  {
                    "$ref": "#/components/schemas/UserGenerateBody"
                  }
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "description": "File Upload Generate Request",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UploadGenerateBody"
                  },
                  {
                    "$ref": "#/components/schemas/UrlGenerateBody"
                  },
                  {
                    "$ref": "#/components/schemas/UserGenerateBody"
                  }
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "image/png"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GenerateSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/GenerateUserErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/GenerateRateLimitResponse"
          },
          "500": {
            "$ref": "#/components/responses/GenerateErrorResponse"
          }
        }
      }
    },
    "/v2/queue": {
      "post": {
        "summary": "Queue skin generation",
        "description": "Add a generation request to the queue.\n\nGenerating a single skin usually takes around 2 seconds, but can take longer depending API load and the number of generator jobs ahead of you in the queue.\n\nUse multipart/form-data to upload image files or application/json for url and user requests.",
        "tags": [
          "generate",
          "queue"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userAgent"
          },
          {
            "$ref": "#/components/parameters/apiKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UrlGenerateBody"
                  },
                  {
                    "$ref": "#/components/schemas/UserGenerateBody"
                  }
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "description": "File Upload Generate Request",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UploadGenerateBody"
                  },
                  {
                    "$ref": "#/components/schemas/UrlGenerateBody"
                  },
                  {
                    "$ref": "#/components/schemas/UserGenerateBody"
                  }
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "image/png"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueueSuccessResponse"
          },
          "202": {
            "$ref": "#/components/responses/QueueProcessingResponse"
          },
          "400": {
            "$ref": "#/components/responses/GenerateUserErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/GenerateRateLimitResponse"
          },
          "500": {
            "$ref": "#/components/responses/GenerateErrorResponse"
          }
        }
      }
    },
    "/v2/queue/{jobId}": {
      "get": {
        "summary": "Get Job Status",
        "description": "Get the status of a generator job.\n\nThis endpoint is rate limited per job. it's recommended you check on the status of a generator job once every second, at most.",
        "tags": [
          "queue"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userAgent"
          },
          {
            "$ref": "#/components/parameters/apiKey"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/QueueSuccessResponse"
          },
          "400": {
            "$ref": "#/components/responses/GenerateUserErrorResponse"
          },
          "429": {
            "$ref": "#/components/responses/GenerateRateLimitResponse"
          },
          "500": {
            "$ref": "#/components/responses/GenerateErrorResponse"
          }
        }
      }
    },
    "/v2/delay": {
      "get": {
        "summary": "Get the current delay",
        "tags": [
          "delay"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/userAgent"
          },
          {
            "$ref": "#/components/parameters/apiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Delay Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitInfo"
                }
              }
            }
          }
        }
      }
    },
    "/v2/skins/{uuid}": {
      "get": {
        "summary": "Get a skin by UUID",
        "description": "Get a skin by UUID",
        "tags": [
          "skins"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/userAgent"
          },
          {
            "$ref": "#/components/parameters/apiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Skin Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkinInfo"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFoundErrorResponse"
          }
        }
      }
    },
    "/v2/skins": {
      "get": {
        "summary": "Get a list of skins",
        "description": "Get a list of skins",
        "tags": [
          "skins"
        ],
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "reference of the last skin in the previous page",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/userAgent"
          },
          {
            "$ref": "#/components/parameters/apiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Skin List",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "skins"
                  ],
                  "properties": {
                    "skins": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PartialSkinInfo"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "url"
                        },
                        "next": {
                          "description": "for pagination, link to the next page",
                          "type": "string",
                          "format": "url"
                        }
                      }
                    },
                    "search": {
                      "description": "search query used for this request",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}